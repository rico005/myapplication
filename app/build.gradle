apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.example.fangsheng.myapplication"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a'
        }

        externalNativeBuild {
            cmake {
                cppFlags ""
                //可使用android.defaultConfig.externalNativeBuild.cmake.abiFilters来单独指示CMake输出的ABI版本。但最终打包进APK的ABI版本还是由ndk.abiFilters决定
                abiFilters 'x86', 'x86_64', 'armeabi-v7a'
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                debuggable = true
            }
        }
        debug {
            jniDebuggable true
        }
    }
    dexOptions {
        preDexLibraries = false
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }



    sourceSets {
        main {
            //路径设为空，不使用src/main/jniLibs目录下已编译出的so文件，通过上面defaultConfig中的ndk配置从c源码重新生成
            jniLibs.srcDirs = []//['src/main/jniLibs']
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.1.0'
    testCompile 'junit:junit:4.12'
    compile 'me.leolin:ShortcutBadger:1.1.19@aar'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'org.jsoup:jsoup:1.11.3'

//    compile 'com.android.tools.build:gradle-experimental:0.7.0'
}
